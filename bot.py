from flask import Flask, render_template
from threading import Thread

app = Flask(__name__)

@app.route('/')
def index():
    return '''<body style="margin: 0; padding: 0;">
    <iframe width="100%" height="100%" src="https://axocoder.vercel.app/" frameborder="0" allowfullscreen></iframe>
  </body>'''

def run():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():  
    t = Thread(target=run)
    t.start()

keep_alive()
print("Server Running Because of Axo")
import discord
from discord import ui
from discord.ext import commands
from discord.ui import Button, View, UserSelect
import asyncio
import random
import os
import sys
from PIL import Image, ImageDraw, ImageFont
from colorama import init, Fore, Style
import json


intents = discord.Intents.default()
intents.typing = True
intents.presences = True
intents.message_content = True

bot = commands.Bot(command_prefix='!', intents=intents)


class Select_Menu(discord.ui.UserSelect):
    def __init__(self, ctx):
        super().__init__(placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        self.ctx = ctx

    async def callback(self, interaction: discord.Interaction):
        if interaction.user != self.ctx.author:
            await interaction.response.send_message("–¢–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä –º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!", ephemeral=True)
            return
        selected_user = self.values[0]  # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ—Ç–æ–º
        if selected_user.bot:
            await interaction.response.send_message("–ë–æ—Ç—ã –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –≤—ã–±—Ä–∞–Ω—ã!", ephemeral=True)
            return

        print(f"–í—ã–±—Ä–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {selected_user.display_name}")  # –í—ã–≤–æ–¥–∏–º display name –≤ –∫–æ–Ω—Å–æ–ª—å

        # Respond to the interaction immediately
        await interaction.response.defer()

        # Do the rest of the processing in the background
        await self.process_selected_user(interaction, selected_user)

    async def process_selected_user(self, interaction: discord.Interaction, selected_user: discord.Member):

        with open('channel_ids.json', 'r') as f:
            channel_ids = json.load(f)
            voice_channel_id = channel_ids.get('voice_channel_id')
            stage_channel_id = channel_ids.get('stage_channel_id')

        channels = [bot.get_channel(channel_id) for channel_id in [
            1231932498917851256, 1185507926987780228, 1228628655345762346, 1185509058019594320, 
            1231192622664519770, 1185612251021967360, 1207366348951392327, 1185516791762534430, 
            1230576734777249793, 1230576771515027608, 1230576799910723714, 1230577711479525518, 
            1230577738692300922, 1230578924887609365]]

        if voice_channel_id:
            channels.append(bot.get_channel(voice_channel_id))
        if stage_channel_id:
            channels.append(bot.get_channel(stage_channel_id))

        messages = []
        last_message = None
        for channel in channels:
            channel_messages = [message async for message in channel.history(limit=10)]  # Get the last 100 messages from the channel
            for message in channel_messages:
                if message.author == selected_user:
                    if message.attachments:
                        if message.clean_content:
                            messages.append(f"{message.author.display_name}({message.author.id}) –≤ {channel.name}: {message.clean_content} (–í–ª–æ–∂–µ–Ω–∏–µ: {', '.join(a.filename for a in message.attachments)})")
                        else:
                            messages.append(f"{message.author.display_name}({message.author.id}) –≤ {channel.name}: (–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π) (–í–ª–æ–∂–µ–Ω–∏–µ: {', '.join(a.filename for a in message.attachments)})")
                    else:
                        messages.append(f"{message.author.display_name}({message.author.id}) –≤ {channel.name}: {message.clean_content} (–í–ª–æ–∂–µ–Ω–∏–π –Ω–µ—Ç)")
                    last_message = message  # Store the last message object
                    break

        # Send the messages.txt file and the last image attachment to a specific channel
        target_channel = bot.get_channel(1233129553736630273)  # Replace with the ID of the channel you want to send to
        with open("messages.txt", "w", encoding="utf-8") as f:
            f.write("\n".join(messages))
        file1 = discord.File("messages.txt", filename="messages.txt")
        await target_channel.send(file=file1)  # Send the messages.txt file first

        if last_message and last_message.attachments:
            last_attachment = last_message.attachments[0]
            attachment_bytes = await last_attachment.read()
            with open(f"attachments/{last_attachment.filename}", "wb") as f:
                f.write(attachment_bytes)
            file2 = discord.File(f"attachments/{last_attachment.filename}", filename=last_attachment.filename)
            await target_channel.send(file=file2)
        for channel in channels:
            channel_messages = [message async for message in channel.history(limit=5)]  # Get the last 100 messages from the channel
            for message in channel_messages:
                if message.author == selected_user:
                    await message.delete()

        image = Image.open('ser.png')

        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
        draw = ImageDraw.Draw(image)

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —à—Ä–∏—Ñ—Ç–∞ –∏ —Ä–∞–∑–º–µ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
        font = ImageFont.truetype('arial.ttf', 20)  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π —à—Ä–∏—Ñ—Ç –∏ —Ä–∞–∑–º–µ—Ä

        # –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö
        draw.text((211, 245), selected_user.display_name, font=font, fill=(0, 0, 0), anchor='mm')

        # —Å–æ—Ö—Ä–∞—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
        with open('image.png', 'wb') as f:
            image.save(f, format='PNG')

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —á–∞—Ç
        channel_id = 1185507926987780228  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –∫–∞–Ω–∞–ª–∞, –∫—É–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        channel = bot.get_channel(channel_id)
        with open('image.png', 'rb') as f:
            file = discord.File(f, filename='image.png')
            await channel.send(f"{selected_user.mention}", file=file)

        # –í—ã–¥–∞–µ–º —Ä–æ–ª—å –ø–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        role_id = 1220789688940498996  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID —Ä–æ–ª–∏, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å
        role = interaction.guild.get_role(role_id)
        await selected_user.add_roles(role)

class GiveawayModal(ui.Modal, title='–†–æ–∑—ã–≥—Ä—ã—à'):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.time = ui.TextInput(label='–í—Ä–µ–º—è (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)', style=discord.TextStyle.short)
        self.text = ui.TextInput(label='–ß—Ç–æ —Ä–∞–∑—ã–≥—Ä—ã–≤–∞–µ—Ç—Å—è', style=discord.TextStyle.paragraph)
        self.channel_input = ui.TextInput(label='–ö–∞–Ω–∞–ª –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ (ID –∏–ª–∏ –∏–º—è)', style=discord.TextStyle.short)

        self.add_item(self.time)
        self.add_item(self.text)
        self.add_item(self.channel_input)

    async def on_submit(self, interaction: discord.Interaction):
        time = int(self.time.value)
        text = self.text.value
        channel_input = self.channel_input.value

        channel = None
        if channel_input.isdigit():
            channel = interaction.guild.get_channel(int(channel_input))
        else:
            channel = discord.utils.get(interaction.guild.channels, name=channel_input)

        if channel is None:
            await interaction.response.send_message('–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω', ephemeral=True)
            return

        await giveaway(interaction, time, text, channel)

async def giveaway(interaction, seconds, text, channel):
    author = interaction.user
    time_end = format_time(seconds)
    msgs = '—ã'
    embed = discord.Embed(
        description=f"**–†–∞–∑—ã–≥—Ä—ã–≤–∞–µ—Ç—Å—è : `{text}`\n–ó–∞–≤–µ—Ä—à–∏—Ç—Å—è —á–µ—Ä–µ–∑: `{time_end}` \n\n–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä: {author.mention} \n–î–ª—è —É—á–∞—Å—Ç–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é –Ω–∏–∂–µ.**",
        colour=0xa400fc)
    await interaction.response.defer()
    message = await channel.send(embed=embed, content=msgs)
    await message.add_reaction("üéâ")  # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏—é –∫ —Å–æ–æ–±—â–µ–Ω–∏—é

    while seconds > -1:
        time_end = format_time(seconds)
        text_message = discord.Embed(
            description=f"**–†–∞–∑—ã–≥—Ä—ã–≤–∞–µ—Ç—Å—è: `{text}`\n–ó–∞–≤–µ—Ä—à–∏—Ç—Å—è —á–µ—Ä–µ–∑: `{time_end}` \n\n–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä: {author.mention} \n–î–ª—è —É—á–∞—Å—Ç–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é –Ω–∏–∂–µ.**",
            colour=0xa400fc)
        await message.edit(embed=text_message)
        await asyncio.sleep(1)
        seconds -= 1
        if seconds < -1:
            break


    #reactions = message.reactions  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–µ–∞–∫—Ü–∏–π
    channel = message.channel
    message_id = message.id
    message = await channel.fetch_message(message_id)
    reaction = message.reactions[0]
    print(reaction)

    users = [user async for user in reaction.users()]

    await message.clear_reactions()

    if reaction.count == 1:
        win = discord.Embed(
            description=f'**–í —ç—Ç–æ–º —Ä–æ–∑—ã–≥—Ä—ã—à–µ –Ω–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è**',
            colour=0xa400fc)
        await message.edit(embed=win)
    else:
        user_win = random.choice(users)
        while str(user_win.id) == str(bot.user.id):
            user_win = random.choice(users)

        win = discord.Embed(
            description=f'**–†–æ–∑—ã–≥—Ä—ã—à –∑–∞–≤–µ—Ä—à—ë–Ω!\n–ü–æ–±–µ–¥–∏—Ç–µ–ª—å {user_win.mention} –≤—ã–∏–≥—Ä–∞–ª: ```{text}```\n–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—É, {author.mention}, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É.**',
            colour=0xa400fc)
        await message.edit(embed=win)

def format_time(seconds):
    return f"{seconds//3600:02d}:{(seconds//60)%60:02d}:{seconds%60:02d}"


@bot.event
async def on_ready():
    print(f'{Fore.RED}–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫: {Style.RESET_ALL}{bot.user} (ID: {bot.user.id})')
    await asyncio.sleep(1)
    print(f'{Fore.RED}–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {Style.RESET_ALL}{bot.user.name}')
    print(f'{Fore.RED}–î–∏—Å–∫—Ä–∏–º–∏–Ω–∞—Ç–æ—Ä: {Style.RESET_ALL}{bot.user.discriminator}')
    print(f'{Fore.RED}–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {Style.RESET_ALL}{bot.user.created_at}')
    print(f'{Fore.RED}–ì–∏–ª—å–¥–∏–∏: {Style.RESET_ALL}{len(bot.guilds)}')
    print(f'{Fore.RED}–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {Style.RESET_ALL}{len(set(member for guild in bot.guilds for member in guild.members))}')
    print(f'{Fore.RED}–ö–∞–Ω–∞–ª—ã: {Style.RESET_ALL}{len(set(channel for guild in bot.guilds for channel in guild.channels))}')
    print(f'{Fore.RED}–ö–æ–º–∞–Ω–¥—ã: {Style.RESET_ALL}{len(bot.commands)}')
    print(f'{Fore.RED}–û—Å–Ω–æ–≤–Ω–æ–π –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ{Style.RESET_ALL}')
    await asyncio.sleep(1)
    channel = bot.get_channel(1225481111904190606)
    await channel.send('–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏–ª—Å—è')

@bot.event
async def is_owner(ctx):
    return ctx.author.id == 833957508979752960

@bot.event
async def on_member_remove(member):
    await asyncio.sleep(1)
    roles = [role.id for role in member.roles if role.id != member.guild.default_role.id]
    roles_db[member.id] = roles
    await asyncio.sleep(1)
    with open('roles.json', 'w') as f:
        json.dump(roles_db, f)

@bot.event
async def on_member_join(member):
    await asyncio.sleep(1)
    if member.id in roles_db:
        roles = [member.guild.get_role(int(role_id)) for role_id in roles_db[member.id]]
        await asyncio.sleep(1)
        for role_id in roles_db[member.id]:
            await asyncio.sleep(1)
            role = member.guild.get_role(int(role_id))
            try:
                await member.add_roles(role)
            except discord.NotFound:
                print(f"Role {role_id} not found. Skipping...")
        del roles_db[member.id]
        with open('roles.json', 'w') as f:
            json.dump(roles_db, f)

'''@bot.event
async def on_raw_reaction_add(payload):
    if payload.message_id == 1233870994683465921:  # ID –°–æ–æ–±—â–µ–Ω–∏—è
        guild = bot.get_guild(payload.guild_id)
        role = None
        if str(payload.emoji) == '‚úÖ':  # Emoji –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π
            role = guild.get_role(1048156318680240179)  # ID –†–æ–ª–µ–π –¥–ª—è –≤—ã–¥–∞—á–∏
        if role:
            member = await guild.fetch_member(payload.user_id)
            if member:
                await member.add_roles(role)

@bot.event
async def on_raw_reaction_remove(payload):
    if payload.message_id == 1233870994683465921:  # ID –°–æ–æ–±—â–µ–Ω–∏—è
        guild = bot.get_guild(payload.guild_id)
        role = None
        if str(payload.emoji) == '‚úÖ':  # Emoji –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π
            role = guild.get_role(1048156318680240179)  # ID –†–æ–ª–µ–π –¥–ª—è –≤—ã–¥–∞—á–∏
        if role:
            member = await guild.fetch_member(payload.user_id)
            if member:
                await member.remove_roles(role)
'''

@bot.command()
@commands.has_any_role(1186969159813316618, 1185509847396012172, 1185541872580579428)
async def buttons(ctx):
    await ctx.message.delete()
    button1 = Button(label='–õ–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –í–æ–π—Å', style=discord.ButtonStyle.red)
    button2 = Button(label='–õ–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¢—Ä–∏–±—É–Ω–∞', style=discord.ButtonStyle.green)
    button3 = Button(label='–î–∞—Ç—å –ì–æ–≤–Ω–æ–µ–¥–∞', style=discord.ButtonStyle.primary)
    button4 = Button(label='–†–æ–∑—ã–≥—Ä—ã—à', style=discord.ButtonStyle.blurple)
    button5 = Button(label='–£–¥–∞–ª–∏—Ç—å –õ–∏–º–∏—Ç–∫—É', style=discord.ButtonStyle.grey)

    category_id = 1232429524143181966  # Replace with the ID of the category
    category = discord.utils.get(ctx.guild.categories, id=category_id)

    ping_messages = ["@everyone –õ–ò–ú–ò–¢–ö–ê", 
    "@everyone –ö—Ç–æ –Ω–µ —Å –Ω–∞–º–∏, —Ç–æ—Ç –ø–æ–¥ –Ω–∞–º–∏", 
    "@everyone –ê –º—ã –≤ –ª–∏–º–∏—Ç–æ—á–∫–µ —Å–∏–¥–∏–º", 
    "@everyone –ó–∞–ª–µ—Ç–∞–µ–º –≤ –ª–∏–º–∏—Ç–æ—á–∫—É, —Ç–æ–ª–∫–∞–µ–º—Å—è —Å–æ—Å–∏—Å–æ—á–∫–∞–º–∏", 
    "@everyone –ó–∞—Ö–æ–¥–∏–º –≤ –ª–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≥–æ–ª–æ–≤–æ–π —á–∞—Ç, –æ–±—â–∞–µ–º—Å—è, –∫–∞–π—Ñ—É–µ–º", 
    "@everyone –ó–∞—Ö–æ–¥–∏—Ç–µ –≤ –Ω–∞—à –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –ª–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π", 
    '@everyone –ù–µ —Ç—Ä–æ–≥–∞–π –ø–∏–ø–∏—Ç–∫—É, **–∑–∞—Ö–æ–¥–∏ –≤ –õ–∏–º–∏—Ç–∫—É**',
    '@everyone –Ø —Å–∫–∞–∑–∞–ª –õ–∏–º–∏—Ç–∫–∞ –∫–ª–∞—Å—Å, –∫—Ç–æ –Ω–µ –≤–µ—Ä–∏—Ç –ø–∏–¥–æ...',
    '@everyone –ß–µ–ª–∏–∫ –∑–∞–π–¥–∏, –º—ã —Ç—É—Ç –ø–∏–∑–¥–∏–º',
    '@everyone –°–Æ–î–ê–ê–ê–ê',
    '@everyone –ü—å—ë–º –ø–µ–≤–∫–æ –≤ –ª–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º',
    '@everyone –°–∏–¥–∏–º, –ø–µ—Ä–¥–∏–º –≤ –ª–∏–º–∏—Ç–æ—á–∫–µ',
    '@everyone –õ–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª',
    '@everyone –°–µ–≥–æ–¥–Ω—è —Å–Ω–æ–≤–∞ –ª–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π',
    '@everyone –í—ã –Ω–µ –ø—Ä–æ—Å–∏–ª–∏, –∞ –º—ã –≤ –ª–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º',
    '@everyone –õ–∏–º–∏—Ç –æ—á–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å, –∑–∞–ª–µ—Ç–∞–π—Ç–µ',
    '@everyone –í–æ–π—Å –æ—Ç–∫—Ä—ã–ª—Å—è, –∞ –Ω—É –±—ã—Å—Ç—Ä–æ –ø–æ—è–≤–∏–ª—Å—è']

    async def button1_callback(interaction):
        if interaction.user != ctx.author and not any(role.id in [1186969159813316618, 1185509847396012172] for role in interaction.user.roles):
            await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –ª–∏–º–∏—Ç–∫—É!", ephemeral=True)
            return
        with open('channel_ids.json', 'r') as f:
            channel_ids = json.load(f)
        if 'voice_channel_id' in channel_ids or 'stage_channel_id' in channel_ids:
            await interaction.response.send_message("–≠, –õ–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω—ã–π –≤–æ–π—Å –∏–ª–∏ —Ç—Ä–∏–±—É–Ω–∞ —É–∂–µ –µ—Å—Ç—å, —É–¥–∞–ª–∏ –∏—Ö!", ephemeral=True)
            return
        voice_channel = await ctx.guild.create_voice_channel('–õ–ò–ú–ò–¢–ò–†–û–í–ê–ù–ù–´–ô –í–û–ô–°', category=category, bitrate=64000, user_limit=0)

        role_ids = [1224402728185364532, 1225476474115457124, 1230797770298884206, 1230797927623168000, 1230798076944318486, 1185525808652107777, 1185541872580579428]
        for role_id in role_ids:
            role = ctx.guild.get_role(role_id)
            if role:
                await voice_channel.set_permissions(role, use_soundboard=True)

        await interaction.response.send_message(f'–ö–∞–Ω–∞–ª "–õ–ò–ú–ò–¢–ò–†–û–í–ê–ù–ù–´–ô –í–û–ô–°" —Å–æ–∑–¥–∞–Ω!', ephemeral=True)

        channel_id = voice_channel.id
        with open('channel_ids.json', 'w') as f:
            json.dump({'voice_channel_id': channel_id}, f)

        channel_id = 1185507926987780228
        channel = interaction.client.get_channel(channel_id)

        ping_message = random.choice(ping_messages)
        await channel.send(ping_message)
        await voice_channel.send(ping_message)

    async def button2_callback(interaction):
        if interaction.user != ctx.author and not any(role.id in [1186969159813316618, 1185509847396012172] for role in interaction.user.roles):
            await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –ª–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Ç—Ä–∏–±—É–Ω—É!", ephemeral=True)
            return
        with open('channel_ids.json', 'r') as f:
            channel_ids = json.load(f)
        if 'voice_channel_id' in channel_ids or 'stage_channel_id' in channel_ids:
            await interaction.response.send_message("–ß–æ, –µ—â—ë –æ–¥–Ω—É —Ç—Ä–∏–±—É–Ω—É —Ö–æ—á–µ—à—å? –ü–µ—Ä–µ—Ö–æ—á–µ—à—å!", ephemeral=True)
            return
        stage_channel = await ctx.guild.create_stage_channel('–õ–ò–ú–ò–¢–ò–†–û–í–ê–ù–ù–ê–Ø –¢–†–ò–ë–£–ù–ê', category=category, bitrate=64000)
        await interaction.response.send_message(f'–¢—Ä–∏–±—É–Ω–∞ "–õ–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –í–æ–π—Å" —Å–æ–∑–¥–∞–Ω–∞!', ephemeral=True)

        channel_id = stage_channel.id
        with open('channel_ids.json', 'w') as f:
            json.dump({'stage_channel_id': channel_id}, f)

        channel_id = 1185507926987780228
        channel = interaction.client.get_channel(channel_id)

        ping_message = random.choice(ping_messages)
        await channel.send(ping_message)
        await stage_channel.send(ping_message)

    async def button3_callback(interaction):
        if interaction.user != ctx.author and not any(role.id in [1186969159813316618, 1185509847396012172, 1185541872580579428] for role in interaction.user.roles):
            await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–∞—Ä–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫!", ephemeral=True)
            return
        view = discord.ui.View()
        view.timeout = None
        view.add_item(Select_Menu(ctx))  # –ü–æ–º–µ—â–∞–µ–º –Ω–∞—à –∫–ª–∞—Å—Å
        await interaction.response.send_message("–ö–æ–≥–æ –≤—ã–±–µ—Ä–µ–º?", view=view, ephemeral=True) 

    async def button4_callback(interaction):
        if interaction.user != ctx.author and not any(role.id in [1186969159813316618, 1185509847396012172] for role in interaction.user.roles):
            await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–µ–ª–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à!", ephemeral=True)
            return
        modal = GiveawayModal(title='–†–æ–∑—ã–≥—Ä—ã—à')
        await interaction.response.send_modal(modal)

    async def button5_callback(interaction):
        with open('channel_ids.json', 'r') as f:
            channel_ids = json.load(f)
        if 'voice_channel_id' in channel_ids:
            voice_channel_id = channel_ids['voice_channel_id']
            voice_channel = interaction.client.get_channel(voice_channel_id)
            await voice_channel.delete()
        if 'stage_channel_id' in channel_ids:
            stage_channel_id = channel_ids['stage_channel_id']
            stage_channel = interaction.client.get_channel(stage_channel_id)
            await stage_channel.delete()
        with open('channel_ids.json', 'w') as f:
            json.dump({}, f)
        await interaction.response.send_message('–õ–∏–º–∏—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∞!', ephemeral=True)

    button1.callback = button1_callback
    button2.callback = button2_callback
    button3.callback = button3_callback
    button4.callback = button4_callback
    button5.callback = button5_callback

    view = discord.ui.View()
    view.add_item(button1)
    view.add_item(button2)
    view.add_item(button3)
    view.add_item(button4)
    view.add_item(button5)

    await ctx.send('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', view=view)

@bot.command(aliases=['—Å', 'clear'])
@commands.has_any_role(1186969159813316618, 1185509847396012172)
async def cls(ctx, member: discord.Member | None, amount: int):
    if member is None:
        await ctx.channel.purge(limit=amount + 1)
    elif member in ctx.guild.members:
        def predicate(message):
            return message.author == member

        deleted = await ctx.channel.purge(check=predicate, limit=amount)
        await ctx.send(f'–£–¥–∞–ª–µ–Ω–æ {len(deleted)} —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç {member.mention}')

'''@bot.command(aliases=['g'])
@commands.has_any_role(1186969159813316618, 1185509847396012172)
async def giveaway(ctx, seconds: int, *, text):
    def format_time(seconds):
        return f"{seconds//3600:02d}:{(seconds//60)%60:02d}:{seconds%60:02d}"

    author = ctx.message.author
    time_end = format_time(seconds)
    msgs = '—ã'
    message = await ctx.send(embed=discord.Embed(
        description=f"**–†–∞–∑—ã–≥—Ä—ã–≤–∞–µ—Ç—Å—è : `{text}`\n–ó–∞–≤–µ—Ä—à–∏—Ç—Å—è —á–µ—Ä–µ–∑: `{time_end}` \n\n–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä: {author.mention} \n–î–ª—è —É—á–∞—Å—Ç–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é –Ω–∏–∂–µ.**",
        colour=0xa400fc), content=msgs)
    await message.add_reaction("üéâ")

    while seconds > -1:
        time_end = format_time(seconds)
        text_message = discord.Embed(
            description=f"**–†–∞–∑—ã–≥—Ä—ã–≤–∞–µ—Ç—Å—è: `{text}`\n–ó–∞–≤–µ—Ä—à–∏—Ç—Å—è —á–µ—Ä–µ–∑: `{time_end}` \n\n–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä: {author.mention} \n–î–ª—è —É—á–∞—Å—Ç–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é –Ω–∏–∂–µ.**",
            colour=0xa400fc)
        await message.edit(embed=text_message)
        await asyncio.sleep(1)
        seconds -= 1
        if seconds < -1:
            break

    channel = message.channel
    message_id = message.id
    message = await channel.fetch_message(message_id)
    reaction = message.reactions[0]

    users = [user async for user in reaction.users()]

    await message.clear_reactions()

    if reaction.count == 1:
        win = discord.Embed(
            description=f'**–í —ç—Ç–æ–º —Ä–æ–∑—ã–≥—Ä—ã—à–µ –Ω–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è**',
            colour=0xa400fc)
        await message.edit(embed=win)
    else:
        user_win = random.choice(users)
        while str(user_win.id) == str(bot.user.id):
            user_win = random.choice(users)

        win = discord.Embed(
            description=f'**–†–æ–∑—ã–≥—Ä—ã—à –∑–∞–≤–µ—Ä—à—ë–Ω!\n–ü–æ–±–µ–¥–∏—Ç–µ–ª—å {user_win.mention} –≤—ã–∏–≥—Ä–∞–ª: ```{text}```\n–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—É, {author.mention}, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É.**',
            colour=0xa400fc)
        await message.edit(embed=win)'''

@bot.command(aliases=['r'])
@commands.check(is_owner)
async def restart(ctx):
    await ctx.message.delete()
    emb = discord.Embed(
                        title=f"**–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞**",
                        color=0xa400fc,
                        )
    emb.set_footer(text = f"–í—ã–ø–æ–ª–Ω–µ–Ω–æ, –∑–∞–ø—Ä–æ—Å–∏–ª {ctx.author}({ctx.author.display_name})", icon_url = ctx.author.display_avatar.url)
    await ctx.send(embed=emb)
    os.system("cls")
    os.execl(sys.executable, sys.executable, * sys.argv)

@bot.command()
@commands.has_any_role(1186969159813316618, 1185509847396012172, 1185541872580579428)
async def image(ctx):
    view = discord.ui.View()
    view.timeout = None
    view.add_item(Select_Menu(ctx))  # –ü–æ–º–µ—â–∞–µ–º –Ω–∞—à –∫–ª–∞—Å—Å
    await ctx.send("–ö–æ–≥–æ –≤—ã–±–µ—Ä–µ–º?", view=view, )  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º –º–µ–Ω—é


@bot.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.MissingPermissions):
        embed = discord.Embed(description=f'**–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã**', color=0xa400fc)
        await ctx.send(embed=embed)
    elif isinstance(error, commands.BotMissingPermissions):
        embed = discord.Embed(description=f'**–ë–æ—Ç—É –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã**', color=0xa400fc)
        await ctx.send(embed=embed)
    elif isinstance(error, commands.MissingRequiredArgument):
        embed = discord.Embed(description=f'**–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã**', color=0xa400fc)
        await ctx.send(embed=embed)
    elif isinstance(error, commands.BadArgument):
        embed = discord.Embed(description=f'**–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã**', color=0xa400fc)
        await ctx.send(embed=embed)
    elif isinstance(error, commands.CommandNotFound):
        embed = discord.Embed(description=f'**–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞**', color=0xa400fc)
        await ctx.send(embed=embed)
    elif isinstance(error, commands.CheckFailure):
        embed = discord.Embed(description=f'**–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ**', color=0xa400fc)
        await ctx.send(embed=embed)
    elif isinstance(error, commands.DisabledCommand):
        embed = discord.Embed(description=f'**–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞**', color=0xa400fc)
        await ctx.send(embed=embed)
    else:
        embed = discord.Embed(description=f'**–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞**', color=0xa400fc)
        await ctx.send(embed=embed)
        print(f"Error: {error}")


bot.run(os.getenv("TOKEN"))
